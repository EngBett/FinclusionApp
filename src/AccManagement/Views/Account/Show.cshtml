@using System.Globalization
@model Account
@{
    ViewData["Title"] = "Account";
    var success = ViewData["Success"]?.ToString();
    var error = ViewData["Error"]?.ToString();
    var transactions = (IEnumerable<AccountTransaction>)ViewBag.Transactions;
}

<div class="col-md-12 d-flex flex-column justify-content-round align-items-center">
    <div class="card col-md-6 mt-5">

        <div class="mt-3">
            <span class="badge badge-@(Model.Active?"success":"danger") mt-1 mb-3">@(Model.Active?"Active":"Inactive")</span><br/>
            @if (!string.IsNullOrEmpty(success))
            {
                <div class="alert alert-success text-center" role="alert">@success</div>
            }
            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger text-center" role="alert">@error</div>
            }

            <h4>Balance: <small style="font-size: 12px">ZAR</small>@(Model.Balance == 0 ? "0.00" : Model.Balance.ToString("#.00"))</h4>
            <small class="text-black-50">Account No. <span class="text-muted">@Model.AccountNumber</span></small>
        </div>
        <div class="card-footer mb-3" style="background-color: white">
            @if (Model.Active)
            {
                <a class="btn btn-outline-danger" asp-controller="Account" asp-action="Deactivate" asp-route-id="@Model.Id">Dectivate</a>
            }
            else
            {
                <a class="btn btn-outline-success" asp-controller="Account" asp-action="Activate" asp-route-id="@Model.Id">Activate</a>
            }
        </div>
    </div>

    <div class="card col-md-12 mt-5">
        <div class="mt-3">
            <h5>Transactions</h5>
        </div>
        <div class="card-footer d-flex justify-content-between align-items-center mb-3" style="background-color: white">
            @if (transactions.Any())
            {
                <table class="table table-striped table-borderless" style="font-size: 12px">
                    <thead>
                    <tr>
                        <th scope="col">TransactionId</th>
                        <th scope="col">Account No.</th>
                        <th scope="col">Description</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Status</th>
                        <th scope="col">Type</th>
                        <th scope="col">Initiated At</th>
                        <th scope="col">Completed At</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var transaction in transactions)
                    {
                        <tr>
                            <th scope="col">@transaction.Id</th>
                            <td>@transaction.Account.AccountNumber</td>
                            <td>@transaction.Description</td>
                            <td>@(transaction.Amount.ToString("#.00"))</td>
                            <td>@(Enum.GetName(typeof(AccountTransaction.TransactionStatus), transaction.TranStatus))</td>
                            <td>@(Enum.GetName(typeof(AccountTransaction.TransactionType), transaction.TranType))</td>
                            <td>@transaction.InitiatedAt.ToString(CultureInfo.InvariantCulture)</td>
                            <td>
                                @if (transaction.CompletedAt != null)
                                {
                                    @transaction.CompletedAt.Value.ToString(CultureInfo.InvariantCulture)
                                }
                                else
                                {
                                    <code>pending...</code>
                                }

                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <small class="text-black-50 text-muted">No transactions yet!</small>
            }
        </div>
    </div>
</div>